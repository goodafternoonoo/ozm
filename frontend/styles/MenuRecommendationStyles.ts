import { StyleSheet, Dimensions } from 'react-native';
import { colors, typography, spacing, shadows } from './GlobalStyles';

const { width, height } = Dimensions.get('window');

export const MenuRecommendationStyles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: colors.background,
    },
    header: {
        padding: spacing.lg,
        backgroundColor: colors.surface,
        borderBottomWidth: 1,
        borderBottomColor: colors.border.light,
        ...shadows.small,
    },
    title: {
        ...typography.h2,
        color: colors.text.primary,
        marginBottom: spacing.sm,
    },
    subtitle: {
        ...typography.body1,
        color: colors.text.secondary,
        lineHeight: 24,
    },
    abTestButton: {
        backgroundColor: colors.status.info + '10',
        padding: spacing.sm,
        borderRadius: 8,
        marginTop: spacing.md,
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'center',
        borderWidth: 1,
        borderColor: colors.status.info + '20',
    },
    abTestButtonText: {
        marginLeft: spacing.xs,
        color: colors.status.info,
        fontWeight: '600' as const,
        fontSize: 14,
    },
    modeSwitchContainer: {
        flexDirection: 'row',
        padding: spacing.md,
        backgroundColor: colors.surface,
        marginBottom: spacing.sm,
        ...shadows.small,
    },
    modeButton: {
        flex: 1,
        paddingVertical: spacing.md,
        paddingHorizontal: spacing.sm,
        borderRadius: 12,
        marginHorizontal: spacing.xs,
        backgroundColor: colors.surfaceSecondary,
        borderWidth: 1,
        borderColor: colors.border.light,
        alignItems: 'center',
        justifyContent: 'center',
    },
    modeButtonActive: {
        backgroundColor: colors.primary,
        borderColor: colors.primary,
        ...shadows.small,
    },
    modeButtonText: {
        ...typography.body2,
        fontWeight: '600' as const,
        color: colors.text.secondary,
    },
    modeButtonTextActive: {
        color: colors.text.inverse,
    },
    inputContainer: {
        padding: spacing.lg,
        backgroundColor: colors.surface,
        marginBottom: spacing.sm,
        ...shadows.small,
    },
    sectionTitle: {
        ...typography.h3,
        color: colors.text.primary,
        marginBottom: spacing.md,
    },
    timeSlotContainer: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginBottom: spacing.lg,
        gap: spacing.sm,
    },
    timeSlotButton: {
        flex: 1,
        alignItems: 'center',
        padding: spacing.md,
        borderRadius: 16,
        borderWidth: 2,
        borderColor: colors.border.light,
        backgroundColor: colors.surface,
        ...shadows.small,
    },
    timeSlotButtonActive: {
        backgroundColor: colors.primary,
        borderColor: colors.primary,
        ...shadows.medium,
    },
    timeSlotText: {
        marginTop: spacing.xs,
        ...typography.body2,
        fontWeight: '600' as const,
        color: colors.primary,
    },
    timeSlotTextActive: {
        color: colors.text.inverse,
    },
    categoryButton: {
        backgroundColor: colors.surfaceSecondary,
        paddingHorizontal: spacing.md,
        paddingVertical: spacing.sm,
        borderRadius: 20,
        marginRight: spacing.sm,
        marginBottom: spacing.sm,
        borderWidth: 1,
        borderColor: colors.border.light,
    },
    categoryButtonActive: {
        backgroundColor: colors.primary,
        borderColor: colors.primary,
    },
    categoryButtonText: {
        ...typography.body2,
        color: colors.text.secondary,
        fontWeight: '500' as const,
    },
    categoryButtonTextActive: {
        color: colors.text.inverse,
    },
    button: {
        backgroundColor: colors.primary,
        padding: spacing.md,
        borderRadius: 16,
        alignItems: 'center',
        justifyContent: 'center',
        ...shadows.medium,
    },
    buttonText: {
        ...typography.button,
        color: colors.text.inverse,
    },
    buttonDisabled: {
        backgroundColor: colors.border.medium,
        shadowOpacity: 0,
        elevation: 0,
    },
    loadingContainer: {
        padding: spacing.xl,
        alignItems: 'center',
        justifyContent: 'center',
        minHeight: height * 0.3,
    },
    loadingText: {
        marginTop: spacing.md,
        ...typography.body1,
        color: colors.text.secondary,
    },
    errorContainer: {
        padding: spacing.lg,
        backgroundColor: colors.status.error + '10',
        margin: spacing.lg,
        borderRadius: 16,
        borderWidth: 1,
        borderColor: colors.status.error + '20',
    },
    errorText: {
        color: colors.status.error,
        textAlign: 'center',
        ...typography.body1,
        fontWeight: '500' as const,
    },
    recommendationsContainer: {
        padding: spacing.lg,
    },
    recommendationsTitle: {
        ...typography.h3,
        color: colors.text.primary,
        marginBottom: spacing.md,
    },
    menuCard: {
        backgroundColor: colors.surface,
        borderRadius: 20,
        padding: spacing.lg,
        marginBottom: spacing.md,
        ...shadows.medium,
        borderWidth: 1,
        borderColor: colors.border.light,
        elevation: 3,
        shadowColor: '#000',
        shadowOffset: {
            width: 0,
            height: 2,
        },
        shadowOpacity: 0.1,
        shadowRadius: 8,
    },
    menuHeader: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'flex-start',
        marginBottom: spacing.md,
    },
    menuName: {
        ...typography.h3,
        color: colors.text.primary,
        flex: 1,
        marginRight: spacing.sm,
        fontWeight: '700' as const,
        fontSize: 18,
        lineHeight: 24,
    },
    ratingContainer: {
        flexDirection: 'row',
        alignItems: 'center',
        backgroundColor: colors.primary + '15',
        paddingHorizontal: spacing.sm,
        paddingVertical: spacing.xs,
        borderRadius: 16,
        borderWidth: 1,
        borderColor: colors.primary + '30',
    },
    ratingText: {
        marginLeft: spacing.xs,
        ...typography.caption,
        color: colors.primary,
        fontWeight: '700' as const,
        fontSize: 13,
    },
    menuDescription: {
        ...typography.body1,
        color: colors.text.secondary,
        lineHeight: 22,
        marginBottom: spacing.md,
        fontSize: 15,
    },
    cardFooter: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginTop: spacing.md,
        flexWrap: 'wrap',
        gap: spacing.sm,
        paddingTop: spacing.md,
        borderTopWidth: 1,
        borderTopColor: colors.border.light + '50',
    },
    categoryContainer: {
        flexDirection: 'row',
        alignItems: 'center',
    },
    categoryText: {
        backgroundColor: colors.primary + '15',
        paddingHorizontal: spacing.md,
        paddingVertical: spacing.sm,
        borderRadius: 16,
        ...typography.caption,
        color: colors.primary,
        fontWeight: '700' as const,
        borderWidth: 1,
        borderColor: colors.primary + '30',
        fontSize: 12,
        textTransform: 'uppercase' as const,
        letterSpacing: 0.5,
    },
    reasonContainer: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: spacing.md,
        backgroundColor: colors.primary + '10',
        padding: spacing.sm,
        borderRadius: 12,
        borderWidth: 1,
        borderColor: colors.primary + '20',
    },
    reasonText: {
        marginLeft: spacing.sm,
        ...typography.body2,
        color: colors.primary,
        flex: 1,
        fontWeight: '500' as const,
    },
    removeButton: {
        flexDirection: 'row',
        alignItems: 'center',
        backgroundColor: colors.status.error + '10',
        paddingHorizontal: spacing.md,
        paddingVertical: spacing.sm,
        borderRadius: 20,
        borderWidth: 1,
        borderColor: colors.status.error + '20',
    },
    removeButtonText: {
        marginLeft: spacing.xs,
        ...typography.body2,
        fontWeight: '600' as const,
        color: colors.status.error,
    },
    savedMenusContainer: {
        padding: spacing.lg,
    },
    savedMenusTitle: {
        ...typography.h3,
        color: colors.text.primary,
        marginBottom: spacing.md,
    },
    emptyStateContainer: {
        padding: spacing.xl,
        alignItems: 'center',
        justifyContent: 'center',
        minHeight: height * 0.4,
    },
    emptyStateIcon: {
        marginBottom: spacing.lg,
        opacity: 0.6,
    },
    emptyStateText: {
        ...typography.body1,
        color: colors.text.secondary,
        textAlign: 'center',
        marginBottom: spacing.sm,
    },
    emptyStateSubtext: {
        ...typography.body2,
        color: colors.text.tertiary,
        textAlign: 'center',
    },
    modalOverlay: {
        flex: 1,
        backgroundColor: 'rgba(0, 0, 0, 0.5)',
        justifyContent: 'center',
        alignItems: 'center',
    },
    modalContent: {
        backgroundColor: colors.surface,
        borderRadius: 20,
        padding: spacing.lg,
        margin: spacing.lg,
        maxWidth: width * 0.9,
        maxHeight: height * 0.8,
        ...shadows.large,
    },
    modalTitle: {
        ...typography.h3,
        color: colors.text.primary,
        marginBottom: spacing.md,
        textAlign: 'center',
    },
    modalCloseButton: {
        position: 'absolute',
        top: spacing.md,
        right: spacing.md,
        padding: spacing.sm,
        borderRadius: 20,
        backgroundColor: colors.surfaceSecondary,
    },
    categoryModalButton: {
        backgroundColor: colors.surfaceSecondary,
        borderRadius: 8,
        padding: spacing.sm,
        marginBottom: spacing.md,
        alignItems: 'center',
        borderWidth: 1,
        borderColor: colors.border.light,
    },
    categoryModalItem: {
        paddingVertical: spacing.md,
        borderBottomWidth: 1,
        borderBottomColor: colors.border.light,
    },
    categoryModalItemText: {
        color: colors.text.primary,
        fontWeight: '400' as const,
        fontSize: 16,
        textAlign: 'center',
    },
    categoryModalItemTextActive: {
        color: colors.primary,
        fontWeight: '600' as const,
    },
    categoryModalCloseButton: {
        marginTop: spacing.md,
        alignItems: 'center',
        padding: spacing.sm,
        borderRadius: 8,
        backgroundColor: colors.surfaceSecondary,
        borderWidth: 1,
        borderColor: colors.border.light,
    },
    categoryModalCloseButtonText: {
        color: colors.text.primary,
        fontWeight: '600' as const,
    },
    collaborativeContainer: {
        backgroundColor: '#FFF8E1',
        borderRadius: 12,
        padding: 10,
        marginBottom: 8,
    },
    collaborativeHeader: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 4,
    },
    collaborativeTitle: {
        marginLeft: 4,
        fontWeight: 'bold',
        color: '#FFA000',
        fontSize: 14,
    },
    similarityInfo: {
        flexDirection: 'row',
        justifyContent: 'space-between',
    },
    similarityText: {
        color: '#FFA000',
        fontSize: 13,
        marginRight: 12,
    },
    abTestContainer: {
        marginTop: 8,
        marginBottom: 8,
        padding: 8,
        backgroundColor: '#F3F8FF',
        borderRadius: 8,
    },
    abTestHeader: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 4,
    },
    abTestTitle: {
        marginLeft: 4,
        fontSize: 13,
        color: '#007AFF',
        fontWeight: 'bold',
    },
    weightSetContainer: {
        flexDirection: 'row',
        flexWrap: 'wrap',
        marginTop: 4,
    },
    weightText: {
        fontSize: 12,
        color: '#555',
        marginRight: 8,
        marginBottom: 2,
    },
});
